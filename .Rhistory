Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
matplot(cbind(W,L), type=c("h", "s"))
plot(r)
mt
r
st
W
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r[i])
Rstar <- (rzip(Nsim, p.zero[i], l.poisson[i])-mt[i])/st[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r[i])
Rstar <- (rzip(Nsim, p.zero[i], l.poisson[i])-mt[i])/st[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
rzip(Nsim, p.zero[i], l.poisson[i])
mt[i]
L[i] <- quantile(Wstar, 1-1/B)
W[i]
p.zero
l.poisson
mt
r
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r[i])
Rstar <- (rzip(Nsim, p.zero[i], l.poisson[i])-mt[i])/st[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B, na.rm = T)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
matplot(cbind(W,L), type=c("h", "s"))
p.poisson
p.zero
l.poisson
mt
st
r
Rstar
Wstar
Wstar
Wstar
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar)
Wstar
pmax
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
Wstar
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r[i])
Rstar <- (rzip(Nsim, p.zero[i], l.poisson[i])-mt[i])/st[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B, na.rm = T)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
matplot(cbind(W,L), type=c("h", "s"))
Rstar
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar)
Wstar
lambda
lambda
Wstar
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r[i])
Rstar <- (rzip(Nsim, p.zero[i], l.poisson[i])-mt[i])/st[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B, na.rm = T)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
matplot(cbind(W,L), type=c("h", "s"))
Wstar
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r[i])
Rstar <- (rzip(Nsim, p.zero[i], l.poisson[i])-mt[i])/st[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B, na.rm = T)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
s
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
Wstar
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r[i])
Rstar <- (rzip(Nsim, p.zero[i], l.poisson[i])-mt[i])/st[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B, na.rm = T)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
matplot(cbind(W,L), type=c("h", "s"))
W
EWMA
EWMA <- max(0, (1-lambda)*EWMA+lambda*r[i], na.rm = T)
EWMA
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r[i], na.rm = T)
Rstar <- (rzip(Nsim, p.zero[i], l.poisson[i])-mt[i])/st[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B, na.rm = T)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
matplot(cbind(W,L), type=c("h", "s"))
matplot(cbind(W[0:400],L[0:400]), type=c("h", "s"))
matplot(cbind(W,L), type=c("h", "s"))
m1 <- zeroinfl(ARR_DEL15 ~ WIND -1  | DEP_DEL15 -1 , dist = "negbin", link = "logit")
summary(m1)
coef(m1)
p.nb <- coef(m1)[1]
p.logit.nb <- coef(m1)[2]
tau <- m1$theta
tau
tau/l.nb
l.nb
l.nb <- exp(p.nb*DEP_DEL15)
tau/l.nb
l.nb/tau
l.nb*(1/tau)
l.nb/(1/tau)
st.nb <- sqrt(l.nb*(1-p.zero.nb)*(1+p.zero.nb*l.nb+l.nb/tau))
p.nb <- coef(m1)[1]
p.logit.nb <- coef(m1)[2]
tau <- m1$theta
p.zerp.nb <- 1/(1+exp(-p.logit.nb*DEP_DEL15))
l.nb <- exp(p.nb*DEP_DEL15)
mt.nb <- (1-p.zero.nb)*l.nb
st.nb <- sqrt(l.nb*(1-p.zero.nb)*(1+p.zero.nb*l.nb+l.nb/tau))
p.zerp.nb <- 1/(1+exp(-p.logit.nb*DEP_DEL15))
l.nb <- exp(p.nb*DEP_DEL15)
mt <- (1-p.zero)*l.poisson
mt.nb <- (1-p.zero.nb)*l.nb
p.zerp.nb <- 1/(1+exp(-p.logit.nb*DEP_DEL15))
mt <- (1-p.zero)*l.poisson
mt.nb <- (1-p.zero.nb)*l.nb
p.zero.nb
p.zero.nb <- 1/(1+exp(-p.logit.nb*DEP_DEL15))
mt.nb <- (1-p.zero.nb)*l.nb
st <- sqrt((1-p.zero)*(l.poisson+p.zero*l.poisson^2))
st
st.nb <- sqrt(l.nb*(1-p.zero.nb)*(1+p.zero.nb*l.nb+l.nb/tau))
st.nb
r.nb <- (ARR_DEL15-mt.nb)/st.nb
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r.nb[i], na.rm = T)
Rstar <- (rzip(Nsim, p.zero.nb[i], l.nb[i])-mt.nb[i])/st.nb[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B, na.rm = T)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
matplot(cbind(W,L), type=c("h", "s"))
matplot(cbind(W[0:500],L[0:500]), type=c("h", "s"))
matplot(cbind(W,L), type=c("h", "s"))
B <- 5000
N <- NROW(r)
W <- L <- double(N)
Nsim <- round(20*B)
Wstar <- double(Nsim)
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r.nb[i], na.rm = T)
Rstar <- (rzip(Nsim, p.zero.nb[i], l.nb[i])-mt.nb[i])/st.nb[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B, na.rm = T)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
matplot(cbind(W,L), type=c("h", "s"))
B <- 500
N <- NROW(r)
W <- L <- double(N)
Nsim <- round(20*B)
Wstar <- double(Nsim)
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r.nb[i], na.rm = T)
Rstar <- (rzip(Nsim, p.zero.nb[i], l.nb[i])-mt.nb[i])/st.nb[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B, na.rm = T)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
matplot(cbind(W,L), type=c("h", "s"))
plot(r)
matplot(cbind(W,L), type=c("h", "s"))
matplot(cbind(W[0:300],L[0:300]), type=c("h", "s"))
summary(m1)
summary(zeroinfl(ARR_DEL15[500]~DEP_DEL15[500]+WIND[500]|DEP_DEL15[500]+WIND[500]))
summary(zeroinfl(ARR_DEL15[0:500]~DEP_DEL15[0:500]+WIND[0:500]|DEP_DEL15[0:500]+WIND[0:500]))
summary(zeroinfl(ARR_DEL15[0:500]~DEP_DEL15[0:500]+WIND[0:500]|DEP_DEL15[0:500]))
summary(zeroinfl(ARR_DEL15[0:500]~DEP_DEL15[0:500]+WIND[0:500]-1|DEP_DEL15[0:500]))
m <-zeroinfl(ARR_DEL15[0:500]~DEP_DEL15[0:500]+WIND[0:500]-1|DEP_DEL15[0:500])
p.poisson <- coef(m)[1:3]
p.logit <- coef(m)[4:6]
p.zero <- 1/(1+exp(-p.logit[1]-p.logit[2]*DEP_DEL15- p.logit[3]*WIND)) #1/(1+exp(-eta))
l.poisson <- exp(p.poisson[1]+p.poisson[2]*DEP_DEL15+p.poisson[3]*WIND)
mt <- (1-p.zero)*l.poisson
coef(m)
p.poisson <- coef(m)[1:2]
p.poisson
p.logit
coef(m)
p.logit <- coef(m)[3:4]
p.logit
p.zero <- 1/(1+exp(-p.logit[1]-p.logit[2]*DEP_DEL15)) #1/(1+exp(-eta))
p.zero
l.poisson <- exp(p.poisson[1]+p.poisson[2]*DEP_DEL15)
l.poisson
mt <- (1-p.zero)*l.poisson
st <- sqrt((1-p.zero)*(l.poisson+p.zero*l.poisson^2))
r <- (ARR_DEL15-mt)/st
lambda <- 0.2
rzip <- function(n, p, l) {
(runif(n)>p)*rpois(n,l)
}
B <- 500
N <- NROW(r)
W <- L <- double(N)
Nsim <- round(20*B)
Nsim <- round(100*B)
Wstar <- double(Nsim)
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r[i], na.rm = T)
Rstar <- (rzip(Nsim, p.zero[i], l[i])-mt[i])/st[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B, na.rm = T)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
rzip <- function(n, p, l) {
(runif(n)>p)*rpois(n,l)
}
B <- 500
N <- NROW(r)
W <- L <- double(N)
Nsim <- round(100*B)
Wstar <- double(Nsim)
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r[i], na.rm = T)
Rstar <- (rzip(Nsim, p.zero[i], l[i])-mt[i])/st[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B, na.rm = T)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r[i], na.rm = T)
Rstar <- (rzip(Nsim, p.zero[i], l.poisson[i])-mt[i])/st[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B, na.rm = T)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
matplot(cbind(W[0:300],L[0:300]), type=c("h", "s"))
matplot(cbind(W,L), type=c("h", "s"))
B <- 500
N <- NROW(r)
W <- L <- double(N)
Nsim <- round(100*B)
Wstar <- double(Nsim)
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r[i], na.rm = T)
Rstar <- (rzip(Nsim, p.zero[i], l.poisson[i])-mt[i])/st[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B, na.rm = T)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
matplot(cbind(W,L), type=c("h", "s"))
ARR_DEL15[0:500]
l.poisson
p.poisson[1]
p.poisson[2]
p.logit.nb
p.logit[1]
p.zero <- 1/(1+exp(-p.logit[1]-p.logit[2]*DEP_DEL15[0:500])) #1/(1+exp(-eta))
p.zero
l.poisson <- exp(p.poisson[1]*DEP_DEL15[0:500+p.poisson[2]*WIND[0:500])
l.poisson <- exp(p.poisson[1]*DEP_DEL15[0:500]+p.poisson[2]*WIND[0:500])
l.poisson
mt <- (1-p.zero)*l.poisson
mt
r <- (ARR_DEL15[0:500-mt)/st
r <- (ARR_DEL15[0:500]-mt)/st
mt
ARR_DEL15[0:500
ARR_DEL15[0:500]
ARR_DEL15[0:500]
r <- (ARR_DEL15[0:500]-mt)/st
st <- sqrt((1-p.zero)*(l.poisson+p.zero*l.poisson^2))
r <- (ARR_DEL15[0:500]-mt)/st
lambda <- 0.2
EWMA <- 0
rzip <- function(n, p, l) {
(runif(n)>p)*rpois(n,l)
}
B <- 500
N <- NROW(r)
W <- L <- double(N)
Nsim <- round(100*B)
Wstar <- double(Nsim)
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r[i], na.rm = T)
Rstar <- (rzip(Nsim, p.zero[i], l.poisson[i])-mt[i])/st[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B, na.rm = T)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
matplot(cbind(W,L), type=c("h", "s"))
B <- 200
N <- NROW(r)
W <- L <- double(N)
Nsim <- round(100*B)
Wstar <- double(Nsim)
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r[i], na.rm = T)
Rstar <- (rzip(Nsim, p.zero[i], l.poisson[i])-mt[i])/st[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B, na.rm = T)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
matplot(cbind(W,L), type=c("h", "s"))
B <- 500
N <- NROW(r)
W <- L <- double(N)
Nsim <- round(100*B)
Wstar <- double(Nsim)
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r[i], na.rm = T)
Rstar <- (rzip(Nsim, p.zero[i], l.poisson[i])-mt[i])/st[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B, na.rm = T)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
matplot(cbind(W,L), type=c("h", "s"))
B <- 500
N <- NROW(r)
W <- L <- double(N)
Nsim <- round(100*B)
Wstar <- double(Nsim)
for (i in seq_along(r)) {
EWMA <- max(0, (1-lambda)*EWMA+lambda*r[i], na.rm = T)
Rstar <- (rzip(Nsim, p.zero[i], l.poisson[i])-mt[i])/st[i]
Wstar <- pmax(0, (1-lambda)*Wstar+lambda*Rstar, na.rm = T)
W[i] <- EWMA
L[i] <- quantile(Wstar, 1-1/B, na.rm = T)
idx <- which(Wstar > L[i])
Wstar[idx] <- sample(Wstar[Wstar<=L[i]], length(idx))
}
warnings()
seq_along(r)
r
d <- read.table(file.choose())
save.image("C:/Users/marco_001/Desktop/capitolo 4/data.RData")
titanic <- read.csv(file.choose(), header = T)
head(titanic)
str(titanic)
titanic <- read.csv(file.choose(), header = T, sep = ";")
titanic
titanic_cont <- table(titanic$Salvato, titanic$Classe)
titanic_cont
addmargins(titanic_cont)
titanic_cont
titanic_cont <- addmargins(titanic_cont)
titanic_cont
test <- chisq.test(titanic_cont)
test
titanic <- table(titanic$Salvato, titanic$Classe)
test2 <- chisq.test(titanic)
test2
test2 <- chisq.test(titanic_cont)
test <- chisq.test(titanic_cont)
expDat <- data.frame()
for (i in 1:3){
expDat[i,1] <- (sum(titanic_cont[i,]) * sum(titanic_cont[,1])) / sum(titanic_cont)
expDat[i,2] <- (sum(titanic_cont[i,]) * sum(titanic_cont[,2])) / sum(titanic_cont)
expDat[i,3] <- (sum(titanic_cont[i,]) * sum(titanic_cont[,3])) / sum(titanic_cont)
}
expDat
expDat <- data.frame()
for (i in 1:3){
expDat[i,1] <- (sum(titanic[i,]) * sum(titanic[,1])) / sum(titanic)
expDat[i,2] <- (sum(titanic[i,]) * sum(titanic[,2])) / sum(titanic)
expDat[i,3] <- (sum(titanic[i,]) * sum(titanic[,3])) / sum(titanic)
}
expDat
titanic
titanic[1,1]
titanic[2,1]
for(i in 1:3){
chi <-(((titanic[1,i]-expDat[1,i])^2)/expDat[1,i])+(((titanic[2,i]-expDat[2,i])^2)/expDat[2,i])
}
chi
test <- chisq.test(titanic_cont)
test2
titanic[1,1]-expDat[1,1]
(titanic[1,1]-expDat[1,1])^2
((titanic[1,1]-expDat[1,1])^2)/expDat[1,1]
xpDat[1,1]
dataset <- read.csv(file.choose(), header = T)
View(dataset)
View(dataset)
cor(dataset)
plot(dataset)
plot(dataset$score_postop,dataset$natural_light="yes")
plot(dataset$score_postop,dataset$natural_light)
par(mfrow=c(2,2))
View(dataset)
View(dataset)
boxplot(dataset$score_postop[wich(tableù§(dataset$sesso)==M)])
boxplot(dataset$score_postop[wich(table(dataset$sesso)==M)])
boxplot(dataset$score_postop ~ dataset$sesso, subset = dataset$sesso %in%  names( table(dataset$sesso) == M)), 'Maschi' ]
boxplot(dataset$score_postop ~ dataset$sesso, subset = dataset$sesso %in%  names( table(dataset$sesso) == M)), 'Maschi'])
boxplot(dataset$score_postop ~ dataset$sesso, subset = dataset$sesso %in%  names(table(dataset$sesso) == M)), 'Maschi')
boxplot(dataset$score_postop ~ dataset$sesso, subset = dataset$sesso %in%  names(table(dataset$sesso) == M), 'Maschi')
boxplot(dataset$score_postop ~ dataset$sesso, data=dataset subset = dataset$sesso %in%  names(table(dataset$sesso) == M), 'Maschi')
boxplot(dataset$score_postop ~ dataset$sesso, data=dataset, subset = dataset$sesso %in%  names(table(dataset$sesso) == M), 'Maschi')
setwd("C:/Users/marco_001/OneDrive/UNIMIB - Data Science/Project/DataVisualization2021")
mental <- read.csv("mental_score_SF12.csv", header = T)
View(mental)
View(mental)
?lm
# ?lm
mental_esplicative <- mental[,-mental$score_postop]
View(mental_esplicative)
View(mental_esplicative)
# ?lm
mental_esplicative <- mental[,-2]
View(mental)
View(mental)
View(mental_esplicative)
View(mental_esplicative)
mental_model <- lm(mental$score_postop ~ mental)
mental_model <- lm(mental$score_postop ~ mental_esplicative)
# ?lm
plot(mental)
View(mental)
View(mental)
model <- lm(score_postop ~ score_preop + condizioni_meteo + sesso + anni_ricovero + temperatura_media + umidità_media + HI...27 + natural_light, data=mental)
model <- lm(score_postop ~ score_preop + condizioni_meteo + sesso + anni_ricovero + temperatura_media + umidita_media + HI...27 + natural_light, data=mental)
summary(model)
model <- lm(score_postop ~ score_preop + sesso + anni_ricovero + temperatura_media + umidita_media + HI...27 + natural_light, data=mental)
summary(model)
model <- lm(score_postop ~ score_preop + sesso + temperatura_media + umidita_media + HI...27 + natural_light, data=mental)
summary(model)
model <- lm(score_postop ~ score_preop + sesso + umidita_media + HI...27 + natural_light, data=mental)
summary(model)
model <- lm(score_postop ~ score_preop + sesso + HI...27 + natural_light, data=mental)
summary(model)
model <- lm(score_postop ~ score_preop + sesso + natural_light, data=mental)
7summary(model)
summary(model)
model <- lm(score_postop ~ score_preop + sesso, data=mental)
summary(model)
plot(model$residuals)
qqnorm(model$residuals)
shapiro.test(model$residuals)
physical <- read.csv("physical_score_SF12.csv", header = T)
View(model)
View(physical)
model_physical <- lm(score_postop ~ score_preop + condizioni_meteo + sesso + anni_ricovero + temperatura_media + umidita_media + HI...27 + natural_light, data=mental)
summary(model_physical)
model_physical <- lm(score_postop ~ score_preop + condizioni_meteo + sesso + anni_ricovero + temperatura_media + umidita_media + HI...27 + natural_light, data=physical)
summary(model_physical)
model_physical <- lm(score_postop ~ score_preop + sesso + anni_ricovero + temperatura_media + umidita_media + HI...27 + natural_light, data=physical)
summary(model_physical)
model_physical <- lm(score_postop ~ score_preop + sesso + temperatura_media + umidita_media + HI...27 + natural_light, data=physical)
summary(model_physical)
model_physical <- lm(score_postop ~ score_preop + sesso + umidita_media + HI...27 + natural_light, data=physical)
summary(model_physical)
model_physical <- lm(score_postop ~ score_preop + sesso + HI...27 + natural_light, data=physical)
summary(model_physical)
model_physical <- lm(score_postop ~ score_preop + sesso + natural_light, data=physical)
summary(model_physical)
plot(model_physical$residuals)
plot(model_physical$fitted.values)
plot(model_physical$fitted.values, physical$score_postop)
